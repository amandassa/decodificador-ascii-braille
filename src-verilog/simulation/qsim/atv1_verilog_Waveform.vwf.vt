// Copyright (C) 2020  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "04/03/2021 15:52:38"
                                                                                
// Verilog Test Bench (with test vectors) for design :                          final
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module final_vlg_vec_tst();
// constants                                           
// general purpose registers
reg c;
reg d;
reg e;
reg f;
reg g;
reg h;
// wires                                               
wire L0;
wire L1;
wire L2;
wire L3;
wire L4;
wire L5;
wire led0;
wire led1;
wire led2;
wire led3;
wire led4;
wire led5;

// assign statements (if any)                          
final i1 (
// port map - connection between master ports and signals/registers   
	.L0(L0),
	.L1(L1),
	.L2(L2),
	.L3(L3),
	.L4(L4),
	.L5(L5),
	.c(c),
	.d(d),
	.e(e),
	.f(f),
	.g(g),
	.h(h),
	.led0(led0),
	.led1(led1),
	.led2(led2),
	.led3(led3),
	.led4(led4),
	.led5(led5)
);
initial 
begin 
#331039 $finish;
end 

// c
initial
begin
	c = 1'b0;
	c = #160000 1'b1;
	c = #159000 1'b0;
end 

// d
initial
begin
	d = 1'b0;
	d = #80000 1'b1;
	d = #80000 1'b0;
	d = #80000 1'b1;
	d = #79000 1'b0;
end 

// e
initial
begin
	repeat(3)
	begin
		e = 1'b0;
		e = #40000 1'b1;
		# 40000;
	end
	e = 1'b0;
	e = #40000 1'b1;
	e = #39000 1'b0;
end 

// f
initial
begin
	repeat(7)
	begin
		f = 1'b0;
		f = #20000 1'b1;
		# 20000;
	end
	f = 1'b0;
	f = #20000 1'b1;
	f = #19000 1'b0;
end 

// g
initial
begin
	repeat(15)
	begin
		g = 1'b0;
		g = #10000 1'b1;
		# 10000;
	end
	g = 1'b0;
	g = #10000 1'b1;
	g = #9000 1'b0;
end 

// h
initial
begin
	repeat(31)
	begin
		h = 1'b0;
		h = #5000 1'b1;
		# 5000;
	end
	h = 1'b0;
	h = #5000 1'b1;
	h = #4000 1'b0;
end 
endmodule

